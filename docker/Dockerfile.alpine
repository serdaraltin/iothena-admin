FROM php:8.2-fpm-alpine

# Install necessary dependencies
RUN apk update && apk add --no-cache \
    apache2 \
    apache2-proxy \
    apache2-ssl \
    apache2-utils \
    supervisor \
    bash \
    curl \
    git \
    zip \
    unzip \
    libpq \
    libpq-dev \
    libpng \
    libpng-dev \
    libjpeg-turbo-dev \
    libwebp-dev \
    freetype-dev \
    oniguruma-dev \
    libxml2-dev \
    build-base \
    openssl-dev \
    redis \
    linux-headers \
    && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install gd pdo pdo_pgsql sockets exif ftp \
    && rm -rf /var/cache/apk/*

RUN apk add --no-cache php82 \
    php82-common \
    php82-fpm \
    php82-pdo \
    php82-opcache \
    php82-zip \
    php82-phar \
    php82-iconv \
    php82-cli \
    php82-curl \
    php82-openssl \
    php82-mbstring \
    php82-tokenizer \
    php82-fileinfo \
    php82-json \
    php82-xml \
    php82-xmlwriter \
    php82-simplexml \
    php82-dom \
    php82-pdo_mysql \
    php82-pdo_sqlite \
    php82-tokenizer \
    php82-pecl-redis

# Enable Apache rewrite module and configure the document root
RUN sed -i 's/#LoadModule rewrite_module/LoadModule rewrite_module/' /etc/apache2/httpd.conf \
    && sed -i 's|/var/www/localhost/htdocs|/var/www/html/public|' /etc/apache2/httpd.conf

ENV APACHE_DOCUMENT_ROOT=/var/www/html/public

# Set working directory
WORKDIR /var/www/html

# Copy application code
COPY . .
COPY .env.production .env

# Copy Composer from its official image
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install PHP dependencies
RUN composer install --no-interaction --optimize-autoloader --no-dev

# Optimize Laravel application
RUN php artisan optimize

# Set permissions
RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache

# Expose necessary ports
EXPOSE 80

# Run Apache in the foreground
CMD ["/usr/sbin/httpd", "-D", "FOREGROUND"]
